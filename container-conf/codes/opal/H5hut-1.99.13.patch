diff -u test/h5u_read.c~ test/h5u_read.c
--- test/h5u_read.c~	2013-11-22 15:06:53.000000000 +0000
+++ test/h5u_read.c	2017-07-19 21:08:50.529502122 +0000
@@ -482,8 +482,8 @@
 
 	h5_int64_t status;
 
-	TEST("Opening file once, read-only, MPI-POSIX VFD");
-	file1 = H5OpenFile(FILENAME, H5_O_RDONLY | H5_VFD_MPIPOSIX, MPI_COMM_WORLD);
+	TEST("Opening file once, read-only");
+	file1 = H5OpenFile(FILENAME, H5_O_RDONLY, MPI_COMM_WORLD);
 	status = H5CheckFile(file1);
 	RETURN(status, H5_SUCCESS, "H5CheckFile");
 
diff -u test/h5u_write.c~ test/h5u_write.c
--- test/h5u_write.c~	2013-11-22 15:06:53.000000000 +0000
+++ test/h5u_write.c	2017-07-19 21:09:07.040725839 +0000
@@ -414,8 +414,8 @@
 
 	h5_err_t status;
 
-	TEST("Opening file once, write-truncate, MPI-POSIX VFD");
-	file1 = H5OpenFile(FILENAME, H5_O_WRONLY | H5_VFD_MPIPOSIX, MPI_COMM_WORLD);
+	TEST("Opening file once, write-truncate");
+	file1 = H5OpenFile(FILENAME, H5_O_WRONLY, MPI_COMM_WORLD);
 
 	status = H5CheckFile(file1);
 	RETURN(status, H5_SUCCESS, "H5CheckFile");
diff -u src/include/h5core/h5_types.h~ src/include/h5core/h5_types.h
--- src/include/h5core/h5_types.h~	2013-11-22 15:06:53.000000000 +0000
+++ src/include/h5core/h5_types.h	2017-07-19 21:08:19.377966727 +0000
@@ -21,7 +21,6 @@
 #define H5_O_WRONLY		0x00000004
 #define H5_O_APPEND		0x00000008
 
-#define H5_VFD_MPIPOSIX         0x00000010
 #define H5_VFD_MPIIO_IND        0x00000020
 #define H5_VFD_INDEPENDENT      H5_VFD_MPIIO_IND // obsolete(?)
 #define H5_VFD_CORE		0x00000040
diff -u src/h5core/h5_readwrite.c~ src/h5core/h5_readwrite.c
--- src/h5core/h5_readwrite.c~	2013-11-22 15:06:53.000000000 +0000
+++ src/h5core/h5_readwrite.c	2017-07-19 21:07:52.643223671 +0000
@@ -292,7 +292,7 @@
 	const int factor
 	) {
 	H5_CORE_API_ENTER (h5_err_t, "f=%p, factor=%d", f, factor);
-	if ( (f->mode & H5_VFD_INDEPENDENT) || (f->mode & H5_VFD_MPIPOSIX) ) {
+	if ( f->mode & H5_VFD_INDEPENDENT ) {
 		f->throttle = factor;
 		h5_info ("Throttling enabled with factor = %d", f->throttle );
 	} else {
diff -u src/h5core/h5_openclose.c~ src/h5core/h5_openclose.c
--- src/h5core/h5_openclose.c~	2013-11-22 15:06:53.000000000 +0000
+++ src/h5core/h5_openclose.c	2017-07-19 21:07:04.001510578 +0000
@@ -138,20 +138,13 @@
 	TRY (f->xfer_prop = hdf5_create_property(H5P_DATASET_XFER));
 	TRY (f->access_prop = hdf5_create_property(H5P_FILE_ACCESS));
 
-	/* select the HDF5 VFD */
-	if (f->mode & H5_VFD_MPIPOSIX) {
-		h5_info("Selecting MPI-POSIX VFD");
-		hbool_t use_gpfs = 0; // TODO autodetect GPFS?
-		TRY (hdf5_set_fapl_mpiposix_property(f->access_prop, comm, use_gpfs));
+	h5_info("Selecting MPI-IO VFD");
+	TRY (hdf5_set_fapl_mpio_property(f->access_prop, comm, MPI_INFO_NULL));
+	if (f->mode & H5_VFD_INDEPENDENT) {
+		h5_info("MPI-IO: Using independent mode");
 	} else {
-		h5_info("Selecting MPI-IO VFD");
-		TRY (hdf5_set_fapl_mpio_property(f->access_prop, comm, MPI_INFO_NULL));
-		if (f->mode & H5_VFD_INDEPENDENT) {
-			h5_info("MPI-IO: Using independent mode");
-		} else {
-			h5_info("MPI-IO: Using collective mode");
-			TRY (hdf5_set_dxpl_mpio_property(f->xfer_prop, H5FD_MPIO_COLLECTIVE) );
-		}
+		h5_info("MPI-IO: Using collective mode");
+		TRY (hdf5_set_dxpl_mpio_property(f->xfer_prop, H5FD_MPIO_COLLECTIVE) );
 	}
 #ifdef H5_USE_LUSTRE
 	if (f->flags & H5_FS_LUSTRE) {
diff -u src/h5core/h5_hdf5_private.h~ src/h5core/h5_hdf5_private.h
--- src/h5core/h5_hdf5_private.h~	2013-11-22 15:06:53.000000000 +0000
+++ src/h5core/h5_hdf5_private.h	2017-07-19 21:06:03.754343113 +0000
@@ -926,24 +926,6 @@
 }
 
 static inline h5_err_t
-hdf5_set_fapl_mpiposix_property (
-	hid_t fapl_id,
-	MPI_Comm comm,
-	hbool_t	use_gpfs
-	) {
-	HDF5_WRAPPER_ENTER (h5_err_t,
-			    "fapl_id=%d, comm=..., use_gpfs=%d",
-			    fapl_id, (int)use_gpfs);
-	if ( H5Pset_fapl_mpiposix (fapl_id, comm, use_gpfs) < 0)
-		HDF5_WRAPPER_LEAVE (
-			h5_error (
-				H5_ERR_HDF5,
-				"Cannot store IO communicator information to"
-				" the file access property list."));
-	HDF5_WRAPPER_RETURN (H5_SUCCESS);
-}
-
-static inline h5_err_t
 hdf5_set_dxpl_mpio_property (
 	hid_t dxpl_id,
 	H5FD_mpio_xfer_t mode
